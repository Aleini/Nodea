// ***********************************************
// This example commands.js shows you how to
// create various custom commands and overwrite
// existing commands.
//
// For more comprehensive examples of custom
// commands please read more here:
// https://on.cypress.io/custom-commands
// ***********************************************

const { handleInput } = require("./helpers");

Cypress.Commands.add('login', (login, password) => {
	cy.session([login, password], () => {
		cy.request({
			method: 'POST',
			url: 'http://127.0.0.1:1337/login',
			body: {
				login,
				password
			},
		}).then(({
			body
		}) => {
			window.localStorage.setItem('authToken', body.token)
		})
	})
})

Cypress.Commands.add('fillForm', (form_selector, attributes, relations) => {
	cy.get(form_selector).within(_ => {
		cy.get('input, textarea, select, .address_component').each(($el, index, $list) => {
			const input_type = $el.attr('type');
			const css_class = $el.attr('class');
			if(input_type == 'button')
				return;
			let attr_type, nodea_type, type_param;
			const field = $el.parents('div[data-field]').attr('data-field');
			const relation = relations.find(x => x.as == $el.attr('name'));

			// Check if it's the right input about the specified attributes in div data-field
			if(field && field == $el.attr('name')) {
				// Field is defined in models
				if(attributes[field]){
					attr_type = attributes[field].type;
					nodea_type = attributes[field].nodeaType;
					type_param = attributes[field].type_parameter;
				}
				handleInput($el, input_type, nodea_type || attr_type, type_param);
			} else if(relation) {
				handleInput($el, input_type, relation.structureType);
			} else if(css_class && css_class.includes('address_component')) {
				handleInput($el, null, 'address_component');
			} else if($el.is(':visible')) {
				// Input search generated by the select2
				const is_select2 = $el.parents('.select2').length;
				if(is_select2)
					return;

				const is_component_address = $el.parents('.address_component').length;
				if(is_component_address)
					return;
				// In case of not an input that is about a model attributes, we care only abour visible input
				handleInput($el, input_type);
			}
		});
	})
})